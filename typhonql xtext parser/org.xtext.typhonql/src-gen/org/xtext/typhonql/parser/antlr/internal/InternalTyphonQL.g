/*
 * generated by Xtext 2.20.0
 */
grammar InternalTyphonQL;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.typhonql.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.typhonql.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.typhonql.services.TyphonQLGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private TyphonQLGrammarAccess grammarAccess;

    public InternalTyphonQLParser(TokenStream input, TyphonQLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Queries";
   	}

   	@Override
   	protected TyphonQLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleQueries
entryRuleQueries returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueriesRule()); }
	iv_ruleQueries=ruleQueries
	{ $current=$iv_ruleQueries.current; }
	EOF;

// Rule Queries
ruleQueries returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getQueriesAccess().getQueriesInsertParserRuleCall_0_0());
				}
				lv_queries_0_1=ruleInsert
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQueriesRule());
					}
					add(
						$current,
						"queries",
						lv_queries_0_1,
						"org.xtext.typhonql.TyphonQL.Insert");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getQueriesAccess().getQueriesDeleteParserRuleCall_0_1());
				}
				lv_queries_0_2=ruleDelete
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQueriesRule());
					}
					add(
						$current,
						"queries",
						lv_queries_0_2,
						"org.xtext.typhonql.TyphonQL.Delete");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getQueriesAccess().getQueriesUpdateParserRuleCall_0_2());
				}
				lv_queries_0_3=ruleUpdate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQueriesRule());
					}
					add(
						$current,
						"queries",
						lv_queries_0_3,
						"org.xtext.typhonql.TyphonQL.Update");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)*
;

// Entry rule entryRuleUpdate
entryRuleUpdate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdateRule()); }
	iv_ruleUpdate=ruleUpdate
	{ $current=$iv_ruleUpdate.current; }
	EOF;

// Rule Update
ruleUpdate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='update'
		{
			newLeafNode(otherlv_0, grammarAccess.getUpdateAccess().getUpdateKeyword_0());
		}
		(
			(
				lv_eid_1_0=RULE_ID
				{
					newLeafNode(lv_eid_1_0, grammarAccess.getUpdateAccess().getEidIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUpdateRule());
					}
					setWithLastConsumed(
						$current,
						"eid",
						lv_eid_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_vid_2_0=RULE_ID
				{
					newLeafNode(lv_vid_2_0, grammarAccess.getUpdateAccess().getVidIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUpdateRule());
					}
					setWithLastConsumed(
						$current,
						"vid",
						lv_vid_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='where'
			{
				newLeafNode(otherlv_3, grammarAccess.getUpdateAccess().getWhereKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateAccess().getWhereExprParserRuleCall_3_1_0());
					}
					lv_where_4_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateRule());
						}
						add(
							$current,
							"where",
							lv_where_4_0,
							"org.xtext.typhonql.TyphonQL.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='set'
		{
			newLeafNode(otherlv_5, grammarAccess.getUpdateAccess().getSetKeyword_4());
		}
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getUpdateAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUpdateAccess().getSetExprParserRuleCall_6_0());
				}
				lv_set_7_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpdateRule());
					}
					add(
						$current,
						"set",
						lv_set_7_0,
						"org.xtext.typhonql.TyphonQL.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getUpdateAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateAccess().getSetExprParserRuleCall_7_1_0());
					}
					lv_set_9_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateRule());
						}
						add(
							$current,
							"set",
							lv_set_9_0,
							"org.xtext.typhonql.TyphonQL.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getUpdateAccess().getRightCurlyBracketKeyword_8());
		}
		otherlv_11=';'
		{
			newLeafNode(otherlv_11, grammarAccess.getUpdateAccess().getSemicolonKeyword_9());
		}
	)
;

// Entry rule entryRuleDelete
entryRuleDelete returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeleteRule()); }
	iv_ruleDelete=ruleDelete
	{ $current=$iv_ruleDelete.current; }
	EOF;

// Rule Delete
ruleDelete returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='delete'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeleteAccess().getDeleteKeyword_0());
		}
		(
			(
				lv_eid_1_0=RULE_ID
				{
					newLeafNode(lv_eid_1_0, grammarAccess.getDeleteAccess().getEidIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeleteRule());
					}
					setWithLastConsumed(
						$current,
						"eid",
						lv_eid_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_vid_2_0=RULE_ID
				{
					newLeafNode(lv_vid_2_0, grammarAccess.getDeleteAccess().getVidIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeleteRule());
					}
					setWithLastConsumed(
						$current,
						"vid",
						lv_vid_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='where'
			{
				newLeafNode(otherlv_3, grammarAccess.getDeleteAccess().getWhereKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeleteAccess().getWhereExprParserRuleCall_3_1_0());
					}
					lv_where_4_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeleteRule());
						}
						add(
							$current,
							"where",
							lv_where_4_0,
							"org.xtext.typhonql.TyphonQL.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getDeleteAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleInsert
entryRuleInsert returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsertRule()); }
	iv_ruleInsert=ruleInsert
	{ $current=$iv_ruleInsert.current; }
	EOF;

// Rule Insert
ruleInsert returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='insert'
		{
			newLeafNode(otherlv_0, grammarAccess.getInsertAccess().getInsertKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertAccess().getObjectsObjParserRuleCall_1_0());
				}
				lv_objects_1_0=ruleObj
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertRule());
					}
					add(
						$current,
						"objects",
						lv_objects_1_0,
						"org.xtext.typhonql.TyphonQL.Obj");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getInsertAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInsertAccess().getObjectsObjParserRuleCall_2_1_0());
					}
					lv_objects_3_0=ruleObj
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInsertRule());
						}
						add(
							$current,
							"objects",
							lv_objects_3_0,
							"org.xtext.typhonql.TyphonQL.Obj");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getInsertAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleObj
entryRuleObj returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjRule()); }
	iv_ruleObj=ruleObj
	{ $current=$iv_ruleObj.current; }
	EOF;

// Rule Obj
ruleObj returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='@'
			{
				newLeafNode(otherlv_0, grammarAccess.getObjAccess().getCommercialAtKeyword_0_0());
			}
			(
				(
					lv_label_1_0=RULE_ID
					{
						newLeafNode(lv_label_1_0, grammarAccess.getObjAccess().getLabelIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getObjRule());
						}
						setWithLastConsumed(
							$current,
							"label",
							lv_label_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		(
			(
				lv_eid_2_0=RULE_ID
				{
					newLeafNode(lv_eid_2_0, grammarAccess.getObjAccess().getEidIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjRule());
					}
					setWithLastConsumed(
						$current,
						"eid",
						lv_eid_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getObjAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjAccess().getSetExprParserRuleCall_3_0());
				}
				lv_set_4_0=ruleExpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjRule());
					}
					add(
						$current,
						"set",
						lv_set_4_0,
						"org.xtext.typhonql.TyphonQL.Expr");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getObjAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getObjAccess().getSetExprParserRuleCall_4_1_0());
					}
					lv_set_6_0=ruleExpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getObjRule());
						}
						add(
							$current,
							"set",
							lv_set_6_0,
							"org.xtext.typhonql.TyphonQL.Expr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getObjAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleExpr
entryRuleExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprRule()); }
	iv_ruleExpr=ruleExpr
	{ $current=$iv_ruleExpr.current; }
	EOF;

// Rule Expr
ruleExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExprAccess().getExprsStringyParserRuleCall_0_0());
				}
				lv_exprs_0_1=ruleStringy
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprRule());
					}
					add(
						$current,
						"exprs",
						lv_exprs_0_1,
						"org.xtext.typhonql.TyphonQL.Stringy");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getExprAccess().getExprsObjParserRuleCall_0_1());
				}
				lv_exprs_0_2=ruleObj
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprRule());
					}
					add(
						$current,
						"exprs",
						lv_exprs_0_2,
						"org.xtext.typhonql.TyphonQL.Obj");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)+
;

// Entry rule entryRuleStringy
entryRuleStringy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringyRule()); }
	iv_ruleStringy=ruleStringy
	{ $current=$iv_ruleStringy.current; }
	EOF;

// Rule Stringy
ruleStringy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_vals_0_1=RULE_VALUE_TERMINAL
				{
					newLeafNode(lv_vals_0_1, grammarAccess.getStringyAccess().getValsVALUE_TERMINALTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringyRule());
					}
					addWithLastConsumed(
						$current,
						"vals",
						lv_vals_0_1,
						"org.xtext.typhonql.TyphonQL.VALUE_TERMINAL");
				}
				    |
				lv_vals_0_2=RULE_STRING
				{
					newLeafNode(lv_vals_0_2, grammarAccess.getStringyAccess().getValsSTRINGTerminalRuleCall_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringyRule());
					}
					addWithLastConsumed(
						$current,
						"vals",
						lv_vals_0_2,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
				    |
				lv_vals_0_3=RULE_ID
				{
					newLeafNode(lv_vals_0_3, grammarAccess.getStringyAccess().getValsIDTerminalRuleCall_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringyRule());
					}
					addWithLastConsumed(
						$current,
						"vals",
						lv_vals_0_3,
						"org.eclipse.xtext.common.Terminals.ID");
				}
				    |
				lv_vals_0_4=RULE_ANY_OTHER
				{
					newLeafNode(lv_vals_0_4, grammarAccess.getStringyAccess().getValsANY_OTHERTerminalRuleCall_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringyRule());
					}
					addWithLastConsumed(
						$current,
						"vals",
						lv_vals_0_4,
						"org.eclipse.xtext.common.Terminals.ANY_OTHER");
				}
			)
		)
	)
;

RULE_VALUE_TERMINAL : ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
