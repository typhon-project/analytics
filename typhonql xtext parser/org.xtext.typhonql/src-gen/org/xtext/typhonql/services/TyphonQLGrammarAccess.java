/*
 * generated by Xtext 2.20.0
 */
package org.xtext.typhonql.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class TyphonQLGrammarAccess extends AbstractGrammarElementFinder {
	
	public class QueriesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.typhonql.TyphonQL.Queries");
		private final Assignment cQueriesAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cQueriesAlternatives_0 = (Alternatives)cQueriesAssignment.eContents().get(0);
		private final RuleCall cQueriesInsertParserRuleCall_0_0 = (RuleCall)cQueriesAlternatives_0.eContents().get(0);
		private final RuleCall cQueriesDeleteParserRuleCall_0_1 = (RuleCall)cQueriesAlternatives_0.eContents().get(1);
		private final RuleCall cQueriesUpdateParserRuleCall_0_2 = (RuleCall)cQueriesAlternatives_0.eContents().get(2);
		
		//Queries:
		//	queries+=(Insert | Delete | Update)*;
		@Override public ParserRule getRule() { return rule; }
		
		//queries+=(Insert | Delete | Update)*
		public Assignment getQueriesAssignment() { return cQueriesAssignment; }
		
		//(Insert | Delete | Update)
		public Alternatives getQueriesAlternatives_0() { return cQueriesAlternatives_0; }
		
		//Insert
		public RuleCall getQueriesInsertParserRuleCall_0_0() { return cQueriesInsertParserRuleCall_0_0; }
		
		//Delete
		public RuleCall getQueriesDeleteParserRuleCall_0_1() { return cQueriesDeleteParserRuleCall_0_1; }
		
		//Update
		public RuleCall getQueriesUpdateParserRuleCall_0_2() { return cQueriesUpdateParserRuleCall_0_2; }
	}
	public class UpdateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.typhonql.TyphonQL.Update");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUpdateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEidAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEidIDTerminalRuleCall_1_0 = (RuleCall)cEidAssignment_1.eContents().get(0);
		private final Assignment cVidAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVidIDTerminalRuleCall_2_0 = (RuleCall)cVidAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cWhereKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cWhereAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cWhereExprParserRuleCall_3_1_0 = (RuleCall)cWhereAssignment_3_1.eContents().get(0);
		private final Keyword cSetKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSetAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSetExprParserRuleCall_6_0 = (RuleCall)cSetAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cSetAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cSetExprParserRuleCall_7_1_0 = (RuleCall)cSetAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cSemicolonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Update:
		//	'update' eid=ID vid=ID ('where' where+=Expr)? 'set' '{' set+=Expr? (',' set+=Expr)* '}' ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'update' eid=ID vid=ID ('where' where+=Expr)? 'set' '{' set+=Expr? (',' set+=Expr)* '}' ';'
		public Group getGroup() { return cGroup; }
		
		//'update'
		public Keyword getUpdateKeyword_0() { return cUpdateKeyword_0; }
		
		//eid=ID
		public Assignment getEidAssignment_1() { return cEidAssignment_1; }
		
		//ID
		public RuleCall getEidIDTerminalRuleCall_1_0() { return cEidIDTerminalRuleCall_1_0; }
		
		//vid=ID
		public Assignment getVidAssignment_2() { return cVidAssignment_2; }
		
		//ID
		public RuleCall getVidIDTerminalRuleCall_2_0() { return cVidIDTerminalRuleCall_2_0; }
		
		//('where' where+=Expr)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'where'
		public Keyword getWhereKeyword_3_0() { return cWhereKeyword_3_0; }
		
		//where+=Expr
		public Assignment getWhereAssignment_3_1() { return cWhereAssignment_3_1; }
		
		//Expr
		public RuleCall getWhereExprParserRuleCall_3_1_0() { return cWhereExprParserRuleCall_3_1_0; }
		
		//'set'
		public Keyword getSetKeyword_4() { return cSetKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//set+=Expr?
		public Assignment getSetAssignment_6() { return cSetAssignment_6; }
		
		//Expr
		public RuleCall getSetExprParserRuleCall_6_0() { return cSetExprParserRuleCall_6_0; }
		
		//(',' set+=Expr)*
		public Group getGroup_7() { return cGroup_7; }
		
		//','
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//set+=Expr
		public Assignment getSetAssignment_7_1() { return cSetAssignment_7_1; }
		
		//Expr
		public RuleCall getSetExprParserRuleCall_7_1_0() { return cSetExprParserRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//';'
		public Keyword getSemicolonKeyword_9() { return cSemicolonKeyword_9; }
	}
	public class DeleteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.typhonql.TyphonQL.Delete");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDeleteKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEidAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEidIDTerminalRuleCall_1_0 = (RuleCall)cEidAssignment_1.eContents().get(0);
		private final Assignment cVidAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVidIDTerminalRuleCall_2_0 = (RuleCall)cVidAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cWhereKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cWhereAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cWhereExprParserRuleCall_3_1_0 = (RuleCall)cWhereAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Delete:
		//	'delete' eid=ID vid=ID ('where' where+=Expr)? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'delete' eid=ID vid=ID ('where' where+=Expr)? ';'
		public Group getGroup() { return cGroup; }
		
		//'delete'
		public Keyword getDeleteKeyword_0() { return cDeleteKeyword_0; }
		
		//eid=ID
		public Assignment getEidAssignment_1() { return cEidAssignment_1; }
		
		//ID
		public RuleCall getEidIDTerminalRuleCall_1_0() { return cEidIDTerminalRuleCall_1_0; }
		
		//vid=ID
		public Assignment getVidAssignment_2() { return cVidAssignment_2; }
		
		//ID
		public RuleCall getVidIDTerminalRuleCall_2_0() { return cVidIDTerminalRuleCall_2_0; }
		
		//('where' where+=Expr)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'where'
		public Keyword getWhereKeyword_3_0() { return cWhereKeyword_3_0; }
		
		//where+=Expr
		public Assignment getWhereAssignment_3_1() { return cWhereAssignment_3_1; }
		
		//Expr
		public RuleCall getWhereExprParserRuleCall_3_1_0() { return cWhereExprParserRuleCall_3_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class InsertElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.typhonql.TyphonQL.Insert");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInsertKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cObjectsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cObjectsObjParserRuleCall_1_0 = (RuleCall)cObjectsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cObjectsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cObjectsObjParserRuleCall_2_1_0 = (RuleCall)cObjectsAssignment_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Insert:
		//	'insert' objects+=Obj (',' objects+=Obj)* ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'insert' objects+=Obj (',' objects+=Obj)* ';'
		public Group getGroup() { return cGroup; }
		
		//'insert'
		public Keyword getInsertKeyword_0() { return cInsertKeyword_0; }
		
		//objects+=Obj
		public Assignment getObjectsAssignment_1() { return cObjectsAssignment_1; }
		
		//Obj
		public RuleCall getObjectsObjParserRuleCall_1_0() { return cObjectsObjParserRuleCall_1_0; }
		
		//(',' objects+=Obj)*
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//objects+=Obj
		public Assignment getObjectsAssignment_2_1() { return cObjectsAssignment_2_1; }
		
		//Obj
		public RuleCall getObjectsObjParserRuleCall_2_1_0() { return cObjectsObjParserRuleCall_2_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class ObjElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.typhonql.TyphonQL.Obj");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cLabelAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cLabelIDTerminalRuleCall_0_1_0 = (RuleCall)cLabelAssignment_0_1.eContents().get(0);
		private final Assignment cEidAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEidIDTerminalRuleCall_1_0 = (RuleCall)cEidAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSetAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSetExprParserRuleCall_3_0 = (RuleCall)cSetAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSetAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cSetExprParserRuleCall_4_1_0 = (RuleCall)cSetAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Obj:
		//	('@' label=ID)? eid=ID '{' set+=Expr? (',' set+=Expr)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//('@' label=ID)? eid=ID '{' set+=Expr? (',' set+=Expr)* '}'
		public Group getGroup() { return cGroup; }
		
		//('@' label=ID)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0_0() { return cCommercialAtKeyword_0_0; }
		
		//label=ID
		public Assignment getLabelAssignment_0_1() { return cLabelAssignment_0_1; }
		
		//ID
		public RuleCall getLabelIDTerminalRuleCall_0_1_0() { return cLabelIDTerminalRuleCall_0_1_0; }
		
		//eid=ID
		public Assignment getEidAssignment_1() { return cEidAssignment_1; }
		
		//ID
		public RuleCall getEidIDTerminalRuleCall_1_0() { return cEidIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//set+=Expr?
		public Assignment getSetAssignment_3() { return cSetAssignment_3; }
		
		//Expr
		public RuleCall getSetExprParserRuleCall_3_0() { return cSetExprParserRuleCall_3_0; }
		
		//(',' set+=Expr)*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//set+=Expr
		public Assignment getSetAssignment_4_1() { return cSetAssignment_4_1; }
		
		//Expr
		public RuleCall getSetExprParserRuleCall_4_1_0() { return cSetExprParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ExprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.typhonql.TyphonQL.Expr");
		private final Assignment cExprsAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cExprsAlternatives_0 = (Alternatives)cExprsAssignment.eContents().get(0);
		private final RuleCall cExprsStringyParserRuleCall_0_0 = (RuleCall)cExprsAlternatives_0.eContents().get(0);
		private final RuleCall cExprsVariableyParserRuleCall_0_1 = (RuleCall)cExprsAlternatives_0.eContents().get(1);
		private final RuleCall cExprsObjParserRuleCall_0_2 = (RuleCall)cExprsAlternatives_0.eContents().get(2);
		
		//Expr:
		//	exprs+=(Stringy | Variabley | Obj)+;
		@Override public ParserRule getRule() { return rule; }
		
		//exprs+=(Stringy | Variabley | Obj)+
		public Assignment getExprsAssignment() { return cExprsAssignment; }
		
		//(Stringy | Variabley | Obj)
		public Alternatives getExprsAlternatives_0() { return cExprsAlternatives_0; }
		
		//Stringy
		public RuleCall getExprsStringyParserRuleCall_0_0() { return cExprsStringyParserRuleCall_0_0; }
		
		//Variabley
		public RuleCall getExprsVariableyParserRuleCall_0_1() { return cExprsVariableyParserRuleCall_0_1; }
		
		//Obj
		public RuleCall getExprsObjParserRuleCall_0_2() { return cExprsObjParserRuleCall_0_2; }
	}
	public class StringyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.typhonql.TyphonQL.Stringy");
		private final Assignment cValsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValsSTRINGTerminalRuleCall_0 = (RuleCall)cValsAssignment.eContents().get(0);
		
		//Stringy String:
		//	vals+=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//vals+=STRING
		public Assignment getValsAssignment() { return cValsAssignment; }
		
		//STRING
		public RuleCall getValsSTRINGTerminalRuleCall_0() { return cValsSTRINGTerminalRuleCall_0; }
	}
	public class VariableyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.typhonql.TyphonQL.Variabley");
		private final Assignment cValsAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cValsAlternatives_0 = (Alternatives)cValsAssignment.eContents().get(0);
		private final RuleCall cValsVALUE_TERMINALTerminalRuleCall_0_0 = (RuleCall)cValsAlternatives_0.eContents().get(0);
		private final RuleCall cValsIDTerminalRuleCall_0_1 = (RuleCall)cValsAlternatives_0.eContents().get(1);
		private final RuleCall cValsANY_OTHERTerminalRuleCall_0_2 = (RuleCall)cValsAlternatives_0.eContents().get(2);
		
		//Variabley Variable:
		//	vals+=(VALUE_TERMINAL | ID | ANY_OTHER);
		@Override public ParserRule getRule() { return rule; }
		
		//vals+=(VALUE_TERMINAL | ID | ANY_OTHER)
		public Assignment getValsAssignment() { return cValsAssignment; }
		
		//(VALUE_TERMINAL | ID | ANY_OTHER)
		public Alternatives getValsAlternatives_0() { return cValsAlternatives_0; }
		
		//VALUE_TERMINAL
		public RuleCall getValsVALUE_TERMINALTerminalRuleCall_0_0() { return cValsVALUE_TERMINALTerminalRuleCall_0_0; }
		
		//ID
		public RuleCall getValsIDTerminalRuleCall_0_1() { return cValsIDTerminalRuleCall_0_1; }
		
		//ANY_OTHER
		public RuleCall getValsANY_OTHERTerminalRuleCall_0_2() { return cValsANY_OTHERTerminalRuleCall_0_2; }
	}
	
	
	private final QueriesElements pQueries;
	private final UpdateElements pUpdate;
	private final DeleteElements pDelete;
	private final InsertElements pInsert;
	private final ObjElements pObj;
	private final ExprElements pExpr;
	private final StringyElements pStringy;
	private final VariableyElements pVariabley;
	private final TerminalRule tVALUE_TERMINAL;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public TyphonQLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pQueries = new QueriesElements();
		this.pUpdate = new UpdateElements();
		this.pDelete = new DeleteElements();
		this.pInsert = new InsertElements();
		this.pObj = new ObjElements();
		this.pExpr = new ExprElements();
		this.pStringy = new StringyElements();
		this.pVariabley = new VariableyElements();
		this.tVALUE_TERMINAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.typhonql.TyphonQL.VALUE_TERMINAL");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.typhonql.TyphonQL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Queries:
	//	queries+=(Insert | Delete | Update)*;
	public QueriesElements getQueriesAccess() {
		return pQueries;
	}
	
	public ParserRule getQueriesRule() {
		return getQueriesAccess().getRule();
	}
	
	//Update:
	//	'update' eid=ID vid=ID ('where' where+=Expr)? 'set' '{' set+=Expr? (',' set+=Expr)* '}' ';';
	public UpdateElements getUpdateAccess() {
		return pUpdate;
	}
	
	public ParserRule getUpdateRule() {
		return getUpdateAccess().getRule();
	}
	
	//Delete:
	//	'delete' eid=ID vid=ID ('where' where+=Expr)? ';';
	public DeleteElements getDeleteAccess() {
		return pDelete;
	}
	
	public ParserRule getDeleteRule() {
		return getDeleteAccess().getRule();
	}
	
	//Insert:
	//	'insert' objects+=Obj (',' objects+=Obj)* ';';
	public InsertElements getInsertAccess() {
		return pInsert;
	}
	
	public ParserRule getInsertRule() {
		return getInsertAccess().getRule();
	}
	
	//Obj:
	//	('@' label=ID)? eid=ID '{' set+=Expr? (',' set+=Expr)* '}';
	public ObjElements getObjAccess() {
		return pObj;
	}
	
	public ParserRule getObjRule() {
		return getObjAccess().getRule();
	}
	
	//Expr:
	//	exprs+=(Stringy | Variabley | Obj)+;
	public ExprElements getExprAccess() {
		return pExpr;
	}
	
	public ParserRule getExprRule() {
		return getExprAccess().getRule();
	}
	
	//Stringy String:
	//	vals+=STRING;
	public StringyElements getStringyAccess() {
		return pStringy;
	}
	
	public ParserRule getStringyRule() {
		return getStringyAccess().getRule();
	}
	
	//Variabley Variable:
	//	vals+=(VALUE_TERMINAL | ID | ANY_OTHER);
	public VariableyElements getVariableyAccess() {
		return pVariabley;
	}
	
	public ParserRule getVariableyRule() {
		return getVariableyAccess().getRule();
	}
	
	//terminal VALUE_TERMINAL:
	//	'0'..'9'+;
	public TerminalRule getVALUE_TERMINALRule() {
		return tVALUE_TERMINAL;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
