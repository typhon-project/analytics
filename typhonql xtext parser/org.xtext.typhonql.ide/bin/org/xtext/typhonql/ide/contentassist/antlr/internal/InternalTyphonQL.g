/*
 * generated by Xtext 2.20.0
 */
grammar InternalTyphonQL;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.typhonql.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.typhonql.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.typhonql.services.TyphonQLGrammarAccess;

}
@parser::members {
	private TyphonQLGrammarAccess grammarAccess;

	public void setGrammarAccess(TyphonQLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleQueries
entryRuleQueries
:
{ before(grammarAccess.getQueriesRule()); }
	 ruleQueries
{ after(grammarAccess.getQueriesRule()); } 
	 EOF 
;

// Rule Queries
ruleQueries 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueriesAccess().getQueriesAssignment()); }
		(rule__Queries__QueriesAssignment)*
		{ after(grammarAccess.getQueriesAccess().getQueriesAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdate
entryRuleUpdate
:
{ before(grammarAccess.getUpdateRule()); }
	 ruleUpdate
{ after(grammarAccess.getUpdateRule()); } 
	 EOF 
;

// Rule Update
ruleUpdate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateAccess().getGroup()); }
		(rule__Update__Group__0)
		{ after(grammarAccess.getUpdateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDelete
entryRuleDelete
:
{ before(grammarAccess.getDeleteRule()); }
	 ruleDelete
{ after(grammarAccess.getDeleteRule()); } 
	 EOF 
;

// Rule Delete
ruleDelete 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteAccess().getGroup()); }
		(rule__Delete__Group__0)
		{ after(grammarAccess.getDeleteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInsert
entryRuleInsert
:
{ before(grammarAccess.getInsertRule()); }
	 ruleInsert
{ after(grammarAccess.getInsertRule()); } 
	 EOF 
;

// Rule Insert
ruleInsert 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInsertAccess().getGroup()); }
		(rule__Insert__Group__0)
		{ after(grammarAccess.getInsertAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObj
entryRuleObj
:
{ before(grammarAccess.getObjRule()); }
	 ruleObj
{ after(grammarAccess.getObjRule()); } 
	 EOF 
;

// Rule Obj
ruleObj 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjAccess().getGroup()); }
		(rule__Obj__Group__0)
		{ after(grammarAccess.getObjAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpr
entryRuleExpr
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getExprAccess().getExprsAssignment()); }
			(rule__Expr__ExprsAssignment)
			{ after(grammarAccess.getExprAccess().getExprsAssignment()); }
		)
		(
			{ before(grammarAccess.getExprAccess().getExprsAssignment()); }
			(rule__Expr__ExprsAssignment)*
			{ after(grammarAccess.getExprAccess().getExprsAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringy
entryRuleStringy
:
{ before(grammarAccess.getStringyRule()); }
	 ruleStringy
{ after(grammarAccess.getStringyRule()); } 
	 EOF 
;

// Rule Stringy
ruleStringy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringyAccess().getValsAssignment()); }
		(rule__Stringy__ValsAssignment)
		{ after(grammarAccess.getStringyAccess().getValsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariabley
entryRuleVariabley
:
{ before(grammarAccess.getVariableyRule()); }
	 ruleVariabley
{ after(grammarAccess.getVariableyRule()); } 
	 EOF 
;

// Rule Variabley
ruleVariabley 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableyAccess().getValsAssignment()); }
		(rule__Variabley__ValsAssignment)
		{ after(grammarAccess.getVariableyAccess().getValsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Queries__QueriesAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueriesAccess().getQueriesInsertParserRuleCall_0_0()); }
		ruleInsert
		{ after(grammarAccess.getQueriesAccess().getQueriesInsertParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getQueriesAccess().getQueriesDeleteParserRuleCall_0_1()); }
		ruleDelete
		{ after(grammarAccess.getQueriesAccess().getQueriesDeleteParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getQueriesAccess().getQueriesUpdateParserRuleCall_0_2()); }
		ruleUpdate
		{ after(grammarAccess.getQueriesAccess().getQueriesUpdateParserRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprsAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExprsStringyParserRuleCall_0_0()); }
		ruleStringy
		{ after(grammarAccess.getExprAccess().getExprsStringyParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprAccess().getExprsVariableyParserRuleCall_0_1()); }
		ruleVariabley
		{ after(grammarAccess.getExprAccess().getExprsVariableyParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getExprAccess().getExprsObjParserRuleCall_0_2()); }
		ruleObj
		{ after(grammarAccess.getExprAccess().getExprsObjParserRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variabley__ValsAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableyAccess().getValsVALUE_TERMINALTerminalRuleCall_0_0()); }
		RULE_VALUE_TERMINAL
		{ after(grammarAccess.getVariableyAccess().getValsVALUE_TERMINALTerminalRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableyAccess().getValsIDTerminalRuleCall_0_1()); }
		RULE_ID
		{ after(grammarAccess.getVariableyAccess().getValsIDTerminalRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableyAccess().getValsANY_OTHERTerminalRuleCall_0_2()); }
		RULE_ANY_OTHER
		{ after(grammarAccess.getVariableyAccess().getValsANY_OTHERTerminalRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__0__Impl
	rule__Update__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getUpdateKeyword_0()); }
	'update'
	{ after(grammarAccess.getUpdateAccess().getUpdateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__1__Impl
	rule__Update__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getEidAssignment_1()); }
	(rule__Update__EidAssignment_1)
	{ after(grammarAccess.getUpdateAccess().getEidAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__2__Impl
	rule__Update__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getVidAssignment_2()); }
	(rule__Update__VidAssignment_2)
	{ after(grammarAccess.getUpdateAccess().getVidAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__3__Impl
	rule__Update__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getGroup_3()); }
	(rule__Update__Group_3__0)?
	{ after(grammarAccess.getUpdateAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__4__Impl
	rule__Update__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getSetKeyword_4()); }
	'set'
	{ after(grammarAccess.getUpdateAccess().getSetKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__5__Impl
	rule__Update__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getUpdateAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__6__Impl
	rule__Update__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getSetAssignment_6()); }
	(rule__Update__SetAssignment_6)?
	{ after(grammarAccess.getUpdateAccess().getSetAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__7__Impl
	rule__Update__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getGroup_7()); }
	(rule__Update__Group_7__0)*
	{ after(grammarAccess.getUpdateAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__8__Impl
	rule__Update__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getUpdateAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getSemicolonKeyword_9()); }
	';'
	{ after(grammarAccess.getUpdateAccess().getSemicolonKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_3__0__Impl
	rule__Update__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getWhereKeyword_3_0()); }
	'where'
	{ after(grammarAccess.getUpdateAccess().getWhereKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getWhereAssignment_3_1()); }
	(rule__Update__WhereAssignment_3_1)
	{ after(grammarAccess.getUpdateAccess().getWhereAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_7__0__Impl
	rule__Update__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getCommaKeyword_7_0()); }
	','
	{ after(grammarAccess.getUpdateAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getSetAssignment_7_1()); }
	(rule__Update__SetAssignment_7_1)
	{ after(grammarAccess.getUpdateAccess().getSetAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Delete__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__0__Impl
	rule__Delete__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getDeleteKeyword_0()); }
	'delete'
	{ after(grammarAccess.getDeleteAccess().getDeleteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__1__Impl
	rule__Delete__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getEidAssignment_1()); }
	(rule__Delete__EidAssignment_1)
	{ after(grammarAccess.getDeleteAccess().getEidAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__2__Impl
	rule__Delete__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getVidAssignment_2()); }
	(rule__Delete__VidAssignment_2)
	{ after(grammarAccess.getDeleteAccess().getVidAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__3__Impl
	rule__Delete__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getGroup_3()); }
	(rule__Delete__Group_3__0)?
	{ after(grammarAccess.getDeleteAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getDeleteAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Delete__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group_3__0__Impl
	rule__Delete__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getWhereKeyword_3_0()); }
	'where'
	{ after(grammarAccess.getDeleteAccess().getWhereKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getWhereAssignment_3_1()); }
	(rule__Delete__WhereAssignment_3_1)
	{ after(grammarAccess.getDeleteAccess().getWhereAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Insert__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__0__Impl
	rule__Insert__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getInsertKeyword_0()); }
	'insert'
	{ after(grammarAccess.getInsertAccess().getInsertKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__1__Impl
	rule__Insert__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getObjectsAssignment_1()); }
	(rule__Insert__ObjectsAssignment_1)
	{ after(grammarAccess.getInsertAccess().getObjectsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__2__Impl
	rule__Insert__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getGroup_2()); }
	(rule__Insert__Group_2__0)*
	{ after(grammarAccess.getInsertAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getInsertAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Insert__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group_2__0__Impl
	rule__Insert__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getInsertAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getObjectsAssignment_2_1()); }
	(rule__Insert__ObjectsAssignment_2_1)
	{ after(grammarAccess.getInsertAccess().getObjectsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Obj__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obj__Group__0__Impl
	rule__Obj__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjAccess().getGroup_0()); }
	(rule__Obj__Group_0__0)?
	{ after(grammarAccess.getObjAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obj__Group__1__Impl
	rule__Obj__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjAccess().getEidAssignment_1()); }
	(rule__Obj__EidAssignment_1)
	{ after(grammarAccess.getObjAccess().getEidAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obj__Group__2__Impl
	rule__Obj__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getObjAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obj__Group__3__Impl
	rule__Obj__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjAccess().getSetAssignment_3()); }
	(rule__Obj__SetAssignment_3)?
	{ after(grammarAccess.getObjAccess().getSetAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obj__Group__4__Impl
	rule__Obj__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjAccess().getGroup_4()); }
	(rule__Obj__Group_4__0)*
	{ after(grammarAccess.getObjAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obj__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getObjAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Obj__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obj__Group_0__0__Impl
	rule__Obj__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjAccess().getCommercialAtKeyword_0_0()); }
	'@'
	{ after(grammarAccess.getObjAccess().getCommercialAtKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obj__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjAccess().getLabelAssignment_0_1()); }
	(rule__Obj__LabelAssignment_0_1)
	{ after(grammarAccess.getObjAccess().getLabelAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Obj__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obj__Group_4__0__Impl
	rule__Obj__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getObjAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obj__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjAccess().getSetAssignment_4_1()); }
	(rule__Obj__SetAssignment_4_1)
	{ after(grammarAccess.getObjAccess().getSetAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Queries__QueriesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueriesAccess().getQueriesAlternatives_0()); }
		(rule__Queries__QueriesAlternatives_0)
		{ after(grammarAccess.getQueriesAccess().getQueriesAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__EidAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getEidIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUpdateAccess().getEidIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__VidAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getVidIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getUpdateAccess().getVidIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__WhereAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getWhereExprParserRuleCall_3_1_0()); }
		ruleExpr
		{ after(grammarAccess.getUpdateAccess().getWhereExprParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__SetAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getSetExprParserRuleCall_6_0()); }
		ruleExpr
		{ after(grammarAccess.getUpdateAccess().getSetExprParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__SetAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getSetExprParserRuleCall_7_1_0()); }
		ruleExpr
		{ after(grammarAccess.getUpdateAccess().getSetExprParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__EidAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteAccess().getEidIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDeleteAccess().getEidIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__VidAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteAccess().getVidIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getDeleteAccess().getVidIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__WhereAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteAccess().getWhereExprParserRuleCall_3_1_0()); }
		ruleExpr
		{ after(grammarAccess.getDeleteAccess().getWhereExprParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__ObjectsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getObjectsObjParserRuleCall_1_0()); }
		ruleObj
		{ after(grammarAccess.getInsertAccess().getObjectsObjParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__ObjectsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getObjectsObjParserRuleCall_2_1_0()); }
		ruleObj
		{ after(grammarAccess.getInsertAccess().getObjectsObjParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__LabelAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjAccess().getLabelIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getObjAccess().getLabelIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__EidAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjAccess().getEidIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getObjAccess().getEidIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__SetAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjAccess().getSetExprParserRuleCall_3_0()); }
		ruleExpr
		{ after(grammarAccess.getObjAccess().getSetExprParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obj__SetAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjAccess().getSetExprParserRuleCall_4_1_0()); }
		ruleExpr
		{ after(grammarAccess.getObjAccess().getSetExprParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExprsAlternatives_0()); }
		(rule__Expr__ExprsAlternatives_0)
		{ after(grammarAccess.getExprAccess().getExprsAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stringy__ValsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringyAccess().getValsSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringyAccess().getValsSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variabley__ValsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableyAccess().getValsAlternatives_0()); }
		(rule__Variabley__ValsAlternatives_0)
		{ after(grammarAccess.getVariableyAccess().getValsAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_VALUE_TERMINAL : ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
