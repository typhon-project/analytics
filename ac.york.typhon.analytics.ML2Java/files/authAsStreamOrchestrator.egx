pre {
	var packageName = AuthChain.all().first().package;
	packageName.println();
	var packageNameSlashes = packageName.replace("\\.","/");
	packageNameSlashes.println();
}
rule AuthChain2Class
	transform authChain : M!AuthChain {
			
		template: "chainAsStreamGenerator.egl"
		
		target: path + "/src/" + packageNameSlashes + "/PreEventAuthorizer.java"
	}

rule AuthTask2Class
	transform authTask : M!AuthTask {
	
		guard : not authTask.asStream
	
		template: "authTaskClassGenerator.egl"
		
		target: path + "/src/" + packageNameSlashes + "/" + authTask.name + ".java"
		
		parameters : Map {
    		"packageName" = packageName
  		}
	}
	
rule AuthTaskAsStream2Class
	transform authTask : M!AuthTask {
	
		guard : authTask.asStream
	
		template: "authTaskAsStreamClassGenerator.egl"
		
		target: path + "/src/" + packageNameSlashes + "/" + authTask.name + ".java"
		
		parameters : Map {
    		"packageName" = packageName
  		}
	}	